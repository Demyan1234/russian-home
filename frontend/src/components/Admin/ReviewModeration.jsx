import React, { useState } from 'react';
import { Card, Button, Badge, Alert, Spinner, Row, Col } from 'react-bootstrap';

const ReviewModeration = ({ 
  reviews = [], 
  loading = false, 
  onApprove, 
  onReject, 
  stats = {} 
}) => {
  const [statusFilter, setStatusFilter] = useState('pending');
  const [error, setError] = useState('');
  
  if (loading) {
    return (
      <div className="text-center p-4">
        <Spinner animation="border" variant="primary" />
        <div className="mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤...</div>
      </div>
    );
  }

  return (
    <div>
      <h4>–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤</h4>
      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <Row className="mb-4">
        <Col md={3}>
          <Card className="text-center">
            <Card.Body>
              <h5 className="text-primary">{stats.total_reviews || 0}</h5>
              <p className="text-muted mb-0">–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤</p>
            </Card.Body>
          </Card>
        </Col>
        <Col md={3}>
          <Card className="text-center border-warning">
            <Card.Body>
              <h5 className="text-warning">{stats.pending_reviews || 0}</h5>
              <p className="text-muted mb-0">–û–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏</p>
            </Card.Body>
          </Card>
        </Col>
        <Col md={3}>
          <Card className="text-center border-success">
            <Card.Body>
              <h5 className="text-success">{stats.approved_reviews || 0}</h5>
              <p className="text-muted mb-0">–û–¥–æ–±—Ä–µ–Ω–æ</p>
            </Card.Body>
          </Card>
        </Col>
        <Col md={3}>
          <Card className="text-center border-danger">
            <Card.Body>
              <h5 className="text-danger">{stats.rejected_reviews || 0}</h5>
              <p className="text-muted mb-0">–û—Ç–∫–ª–æ–Ω–µ–Ω–æ</p>
            </Card.Body>
          </Card>
        </Col>
      </Row>

      {error && <Alert variant="danger">{error}</Alert>}

      {/* –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ */}
      <div>
        {reviews.length === 0 ? (
          <Alert variant="info">
            –ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
          </Alert>
        ) : (
          reviews.map(review => (
            <Card key={review.id} className="mb-3 shadow-sm">
              <Card.Body>
                <div className="d-flex justify-content-between align-items-start">
                  <div className="flex-grow-1">
                    <div className="d-flex align-items-center mb-2">
                      <h6 className="mb-0 me-3 text-primary">{review.product_name}</h6>
                      <Badge 
                        bg={
                          review.status === 'approved' ? 'success' :
                          review.status === 'rejected' ? 'danger' : 'warning'
                        }
                      >
                        {review.status === 'approved' ? '–û–¥–æ–±—Ä–µ–Ω' :
                         review.status === 'rejected' ? '–û—Ç–∫–ª–æ–Ω–µ–Ω' : '–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏'}
                      </Badge>
                    </div>
                    
                    <div className="mb-2">
                      <strong>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> {review.user_name} ({review.user_email})
                    </div>
                    
                    <div className="mb-2">
                      <strong>‚≠ê –†–µ–π—Ç–∏–Ω–≥:</strong> 
                      <span className="text-warning ms-2">
                        {'‚òÖ'.repeat(review.rating)}{'‚òÜ'.repeat(5 - review.rating)}
                      </span>
                      <span className="text-muted ms-2">({review.rating}/5)</span>
                    </div>
                    
                    {review.comment && (
                      <div className="mb-2">
                        <strong> –û—Ç–∑—ã–≤:</strong> 
                        <div className="border-start border-3 border-primary ps-3 mt-1 bg-light rounded p-2">
                          {review.comment}
                        </div>
                      </div>
                    )}
                    
                    <div className="text-muted small">
                      <strong> –î–∞—Ç–∞:</strong> {new Date(review.created_at).toLocaleDateString('ru-RU')}
                      {review.moderated_at && (
                        <span className="ms-3">
                          <strong> –ú–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω:</strong> {new Date(review.moderated_at).toLocaleDateString('ru-RU')}
                        </span>
                      )}
                    </div>
                  </div>

                  {review.status === 'pending' && (
                    <div className="d-flex flex-column gap-2 ms-3">
                      <Button 
                        variant="success" 
                        size="sm"
                        onClick={() => onApprove(review.id)}
                        className="px-3"
                      >
                        –û–¥–æ–±—Ä–∏—Ç—å
                      </Button>
                      <Button 
                        variant="outline-danger" 
                        size="sm"
                        onClick={() => {
                          const reason = prompt('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞:');
                          if (reason) onReject(review.id, reason);
                        }}
                        className="px-3"
                      >
                        –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                      </Button>
                    </div>
                  )}
                </div>
              </Card.Body>
            </Card>
          ))
        )}
      </div>
    </div>
  );
};

export default ReviewModeration;