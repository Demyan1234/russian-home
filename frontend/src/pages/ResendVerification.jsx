import React, { useState, useContext } from 'react';
import { Container, Card, Button, Alert, Spinner } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';
import { AppContext } from '../context/ContextProvider';
import { authAPI } from '../http/authAPI';

const ResendVerification = () => {
    const { user } = useContext(AppContext);
    const navigate = useNavigate();
    const [loading, setLoading] = useState(false);
    const [message, setMessage] = useState('');
    const [error, setError] = useState('');

    const handleResendEmail = async () => {
        setLoading(true);
        setError('');
        setMessage('');

        try {
            const response = await authAPI.resendVerification();
            setMessage('–ü–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –≤–∞—à email. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.');
        } catch (error) {
            setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: ' + error.message);
        } finally {
            setLoading(false);
        }
    };

    if (!user.isAuth) {
        return (
            <Container className="d-flex align-items-center justify-content-center min-vh-100">
                <Card style={{ maxWidth: '500px' }} className="text-center">
                    <Card.Body>
                        <h4>–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h4>
                        <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.</p>
                        <Button onClick={() => navigate('/login')}>
                            –í–æ–π—Ç–∏
                        </Button>
                    </Card.Body>
                </Card>
            </Container>
        );
    }

    if (user.emailVerified) {
        return (
            <Container className="d-flex align-items-center justify-content-center min-vh-100">
                <Card style={{ maxWidth: '500px' }} className="text-center">
                    <Card.Body>
                        <h4>Email —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</h4>
                        <p>–í–∞—à email –∞–¥—Ä–µ—Å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.</p>
                        <Button onClick={() => navigate('/shop')}>
                            –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω
                        </Button>
                    </Card.Body>
                </Card>
            </Container>
        );
    }

    return (
        <Container className="d-flex align-items-center justify-content-center min-vh-100">
            <Card style={{ maxWidth: '500px', width: '100%' }} className="shadow-lg border-0">
                <Card.Body className="text-center p-5">
                    <div className="mb-4" style={{ fontSize: '4rem' }}>
                        üìß
                    </div>

                    <h3 className="mb-3 fw-bold">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ Email</h3>

                    <p className="text-muted mb-4">
                        –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à email –∞–¥—Ä–µ—Å.
                        –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø–∏—Å—å–º–µ.
                    </p>

                    {message && <Alert variant="success">{message}</Alert>}
                    {error && <Alert variant="danger">{error}</Alert>}

                    <div className="d-grid gap-3">
                        <Button 
                            variant="primary" 
                            size="lg"
                            onClick={handleResendEmail}
                            disabled={loading}
                        >
                            {loading ? (
                                <>
                                    <Spinner animation="border" size="sm" className="me-2" />
                                    –û—Ç–ø—Ä–∞–≤–∫–∞...
                                </>
                            ) : (
                                '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ'
                            )}
                        </Button>
                        
                        <Button 
                            variant="outline-secondary" 
                            onClick={() => navigate('/shop')}
                        >
                            –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω
                        </Button>
                    </div>

                    <div className="mt-4 small text-muted">
                        <p>–ù–µ –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ?</p>
                        <ul className="text-start">
                            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º"</li>
                            <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π email</li>
                            <li>–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç</li>
                        </ul>
                    </div>
                </Card.Body>
            </Card>
        </Container>
    );
};

export default ResendVerification;